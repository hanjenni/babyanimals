{"version":3,"sources":["components/ErrorMessage/ErrorMessage.jsx","utils/tokenService.js","utils/userService.js","pages/SignupPage/SignupPage.jsx","pages/LoginPage/LoginPage.jsx","components/Header/Header.jsx","components/PostCard/PostCard.jsx","components/PostGallery/PostGallery.jsx","components/AddPost/AddPost.jsx","utils/postApi.js","utils/likesApi.js","pages/Feed/Feed.jsx","components/ProfileBio/ProfileBio.jsx","pages/Profile/Profile.jsx","pages/App/App.jsx","serviceWorker.js","index.js"],"names":["ErrorMessage","props","className","error","getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","setToken","setItem","removeToken","getUserFromToken","user","BASE_URL","userService","signup","fetch","method","body","then","res","ok","json","response","console","log","Error","err","tokenService","logout","login","creds","headers","Headers","stringify","getUser","getProfile","username","Authorization","SignUpPage","useState","message","passwordError","setError","email","password","passwordConf","state","setState","navigate","useNavigate","selectedFile","setSelectedFile","handleChange","e","target","name","value","a","key","preventDefault","formData","FormData","append","handleSignUpOrLogin","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Header","as","color","Image","src","Form","onSubmit","size","autoComplete","Segment","stacked","Input","iconPosition","placeholder","fluid","icon","onChange","required","type","Field","files","Button","Message","to","LoginPage","PageHeader","loggedUser","handleLogout","floated","onClick","centered","PostCard","post","isProfile","addLike","removeLike","liked","likes","findIndex","like","likedColor","clickHandler","_id","Card","raised","Content","avatar","photoUrl","wrapped","ui","Description","caption","extra","Icon","length","PostGallery","posts","numPhotosCol","Group","itemsPerRow","stackable","map","AddPost","selectFile","handleAddPost","create","getAll","postId","likeId","Feed","setPosts","likesAPI","getPosts","postsAPI","data","useEffect","columns","Row","numsPhotosCol","ProfileBio","vertical","Profile","profileUser","setProfileUser","useParams","useCallback","App","setUser","path","element","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.dd2fcc73.chunk.js","sourcesContent":["import React from 'react';\n\n\nexport default function ErrorMessage(props) {\n    return <span className={\"error\"}>{props.error}</span>\n}","function setToken(token) {\n  if (token) {\n    // localStorage is given to us by the browser\n    localStorage.setItem('token', token);\n  } else {\n    localStorage.removeItem('token');\n  }\n}\n\nfunction getToken() {\n  let token = localStorage.getItem('token');\n  if (token) {\n    // Check if expired, remove if it is\n    // atob is a function that decodes a base-64 string\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    // JWT's exp is expressed in seconds, not milliseconds, so convert\n    if (payload.exp < Date.now() / 1000) {\n      localStorage.removeItem('token');\n      token = null;\n    }\n  }\n  return token;\n}\n\nfunction getUserFromToken() {\n  const token = getToken();\n  return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n}\n\nfunction removeToken() {\n  localStorage.removeItem('token');\n}\n\nexport default {\n  setToken,\n  getToken,\n  removeToken,\n  getUserFromToken\n};","import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\nfunction getProfile(username) {\n  console.log('getProfile calling')\n  return fetch(BASE_URL + username, {\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(),\n    }\n  }).then(res => {\n    if (res.ok) return res.json();\n    throw new Error('Error from getProfile, check the server terminal')\n  })\n}\n\n// NOTE THIS IS configured to send of a multi/part form request\n// aka photo \nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    body: user\n  })\n    .then(res => {\n      if (res.ok) return res.json();\n      // Probably a duplicate email\n\n      // Writing your error handling like this allows you to throw the error response \n      // to the catch block where signup occurs,  \n\n      //     res.status(400).json({ err: \"Something went wrong\" }); notice err, and response.err match\n      return res.json().then(response => {\n        console.log(response)\n        throw new Error(response.err)\n      })\n    })\n    // Parameter destructuring!\n    .then(({ token }) => tokenService.setToken(token));\n  // Setting our token in localStorage in our browser\n  // then we'll be able to use with every request!\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({ 'Content-Type': 'application/json' }),\n    body: JSON.stringify(creds)\n  })\n    .then(res => {\n      // Valid login if we have a status of 2xx (res.ok)\n      if (res.ok) return res.json();\n      return res.json().then(response => {\n        console.log(response)\n        throw new Error(response.err)\n      })\n    })\n    .then(({ token }) => tokenService.setToken(token));\n}\n\n\nconst userService = {\n  signup,\n  logout,\n  login,\n  getUser,\n  getProfile\n};\nexport default userService","import React, { useState } from \"react\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport { Button, Form, Grid, Header, Image, Segment, Message } from 'semantic-ui-react';\n\nimport userService from \"../../utils/userService\";\nimport { useNavigate, Link } from \"react-router-dom\";\n\nimport './SignupPage.css';\n\nexport default function SignUpPage(props) {\n  const [error, setError] = useState({\n    message: '',\n    passwordError: false\n  });\n\n\n  const [state, setState] = useState({\n    username: '',\n    email: '',\n    password: '',\n    passwordConf: '',\n\n  });\n\n  const navigate = useNavigate();\n\n  const [selectedFile, setSelectedFile] = useState('')\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('photo', selectedFile);\n    for (let key in state) {\n      formData.append(key, state[key]);\n    }\n    console.log(formData, '<-formdata')\n    // console.log(formData.forEach((item) => console.log(item)), '<-formData'\n    // );\n\n    try {\n      await userService.signup(formData);\n      props.handleSignUpOrLogin();\n      navigate('/');\n    } catch (err) {\n      console.log(err);\n      setError({ message: err.message, passwordError: false });\n    }\n  }\n\n  function handleFileInput(e) {\n    console.log(e.target.files, '<-this is e.target.files')\n    setSelectedFile(e.target.files[0]);\n  }\n\n  return (\n  <>\n  <div className=\"Body\">\n    <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as='h2' color='yellow' textAlign='center'>\n          <Image src='/animal.png' /> Sign Up\n        </Header>\n        <Form onSubmit={handleSubmit} size='large' autoComplete='on' className=\"SignUpForm\">\n          <Segment stacked>\n            <Form.Input\n              name='username'\n              value={state.username}\n              iconPosition='left'\n              placeholder='username'\n              fluid icon='user'\n              onChange={handleChange}\n              required\n            />\n            <Form.Input\n              name='email'\n              type='email'\n              value={state.email}\n              iconPosition='left'\n              placeholder='email'\n              fluid icon='mail'\n              onChange={handleChange}\n              required\n            />\n            <Form.Input \n              name='password'\n              type='password'\n              value={state.password}\n              iconPosition='left'\n              placeholder='Password'\n              fluid icon='lock'\n              onChange={handleChange}\n              required\n\n            />\n            <Form.Input\n              name='passwordConf'\n              type='password'\n              iconPosition='left'\n              placeholder='Confirm Password'\n              fluid icon='lock'\n              value={state.passwordConf}\n              onChange={handleChange}\n              required\n\n            />\n            <Form.Field>\n              <Form.Input\n                type=\"file\"\n                name=\"photo\"\n                placeholder=\"upload image\"\n                onChange={handleFileInput}\n              />\n            </Form.Field>\n            <Button color='yellow' fluid size='large'>\n              Sign Up\n            </Button>\n          </Segment>\n          {error.message ? <ErrorMessage error={error.message} /> : null}\n        </Form>\n        <Message>\n          Already a member? <Link to='/login'>Login</Link>\n        </Message>\n      </Grid.Column>\n    </Grid>\n    </div>\n    </>\n \n  );\n}\n","import React, { useState } from \"react\";\nimport \"./LoginPage.css\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport userService from \"../../utils/userService\";\nimport { Button, Form, Grid, Header, Image, Segment, Message } from 'semantic-ui-react';\nimport { useNavigate, Link } from \"react-router-dom\";\n\n\n\nexport default function LoginPage(props) {\n  const [error, setError] = useState('');\n  const [state, setState] = useState({\n    email: '',\n    password: '',\n  })\n\n  const navigate = useNavigate();\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    })\n  }\n\n\n  async function handleSubmit(e){\n    e.preventDefault();\n\n    try {\n      await userService.login(state);\n      props.handleSignUpOrLogin();\n      navigate('/');\n    }catch (err) {\n      setError(err.message);\n    }\n  }\n\n  return (\n\n    <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as='h2' color='teal' textAlign='center'>\n          <Image src='/animal.png' /> Welcome Back! \n        </Header>\n        <Form onSubmit={handleSubmit} size='large' autoComplete='on'>\n          <Segment stacked>\n            <Form.Input\n              name='email'\n              type='email'\n              value={state.email}\n              iconPosition='left'\n              placeholder='email'\n              fluid icon='mail'\n              onChange={handleChange}\n              required\n            />\n            <Form.Input\n              name='password'\n              type='password'\n              value={state.password}\n              iconPosition='left'\n              placeholder='Password'\n              fluid icon='lock'\n              onChange={handleChange}\n              required\n\n            />\n            <Button color='teal' fluid size='large'>\n              Log In\n            </Button>\n          </Segment>\n        </Form>\n        <Message>\n          New to us? <Link to ='/signup'>Sign Up</Link>\n        </Message>\n        {error ? <ErrorMessage error={error} /> : null}\n      </Grid.Column>\n    </Grid>\n \n  );\n}\n","import React from 'react'\nimport { Header, Image } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\n\nexport default function PageHeader({loggedUser, handleLogout }) {\n    console.log(loggedUser, '<-user in header')\n  return (\n    <>\n\n<Header as=\"h3\" floated=\"right\">\n        <Link to='/'>\n          Home\n        </Link>\n      </Header>  \n      \n      <Header as=\"h3\" floated=\"right\">\n        <Link to=\"/\">\n        </Link>\n        <Link to=\"/\" onClick={handleLogout}>\n          Logout\n        </Link>\n      </Header>\n      <Header as=\"h3\" floated=\"right\">\n        <Link to={`/${loggedUser?.username}`}>\n          My Page\n        </Link>\n      </Header>\n\n\n      <Image\n        centered\n        size='small'\n        src='/animal.png'\n\n      />\n    </>\n  )\n}\n\n\n\n\n","import React from 'react';\nimport { Card, Icon, Image } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\n\n\nfunction PostCard({ post, isProfile, addLike, removeLike, loggedUser }) {\n    const liked = post.likes.findIndex(\n        (like) => like.username === loggedUser.username\n      );\n    const likedColor = liked > -1 ? 'red' : 'grey';\n    const clickHandler = liked > -1 ? () => removeLike(post.likes[liked]._id) : () => addLike(post._id)\n\n    return (\n        <Card key={post._id} raised>\n            {isProfile ? (\n                \"\"\n            ) : (\n                <Card.Content textAlign=\"left\">\n                    <Card.Header>\n                        <Link to={`/${post.user.username}`}>\n                            <Image\n                                size=\"large\"\n                                avatar\n                                src={\n                                    post.user.photoUrl\n                                        ? post.user.photoUrl\n                                        : \"https://react.semantic-ui.com/images/wireframe/square-image.png\"\n                                }\n                            />\n                            {post.user.username}\n                        </Link>\n                    </Card.Header>\n                </Card.Content>\n            )}\n\n            <Image src={`${post?.photoUrl}`} wrapped ui={false} />\n            <Card.Content>\n                <Card.Description>{post.caption}</Card.Description>\n            </Card.Content>\n            <Card.Content extra textAlign={\"right\"}>\n                <Icon\n                    name={\"delete\"}\n                    size=\"large\"\n                    onClick=''\n                />\n                <Icon\n                    name={\"heart\"}\n                    size=\"large\"\n                    color={likedColor}\n                    onClick={clickHandler}\n                />\n\n                {post.likes.length} Likes\n            </Card.Content>\n        </Card>\n    );\n}\n\nexport default PostCard;\n","import React from 'react';\nimport PostCard from '../PostCard/PostCard';\nimport { Card } from 'semantic-ui-react'\n\n\nexport default function PostGallery({ posts, numPhotosCol, isProfile, removeLike, addLike, loggedUser }) {\n    return (\n        <Card.Group itemsPerRow={numPhotosCol} stackable>\n        {posts.map((post) => {\n            return (\n                <PostCard\n                    post={post}\n                    key={post._id}\n                    isProfile={isProfile}\n                    removeLike={removeLike}\n                    addLike={addLike}\n                    loggedUser={loggedUser}\n                />\n            );\n        })}\n    </Card.Group>\n    )\n}\n\n\n","\nimport React, { useState } from 'react';\nimport { Button, Form, Segment } from 'semantic-ui-react';\n\n\nexport default function AddPost(props) {\n    const [state, setState] = useState({\n        caption: '',\n    })\n\n    const [selectFile, setSelectedFile] = useState('');\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.append('photo', selectFile);\n        formData.append('caption', state.caption);\n        props.handleAddPost(formData);\n\n\n    }\n\n    function handleFileInput(e) {\n        console.log(e.target.files, '<-e.target.files')\n        setSelectedFile(e.target.files[0]);\n    }\n\n    function handleChange(e) {\n        setState({\n            caption: e.target.value,\n        })\n    }\n\n    return (\n        <Segment>\n            <Form onSubmit={handleSubmit}>\n                <Form.Input\n                    className='form'\n                    name='caption'\n                    value={state.caption}\n                    onChange={handleChange}\n                    required\n                />\n                <Form.Field>\n                    <Form.Input\n                        type='file'\n                        name='photo'\n                        placeholder='add an image'\n                        onChange={handleFileInput}\n                    />\n                </Form.Field>\n                <Button type='submit' className='btn'>\n                    ADD BABY ANIMAL\n                </Button>\n            </Form>\n        </Segment>\n    )\n}","\nimport tokenService from './tokenService';\n\nconst BASE_URL = '/api/posts';\n\n\n// export function removePost(PostId) {\n//     return fetch(`${BASE_URL}posts/${PostId}`, {\n//       method: \"DELETE\",\n//       headers: {\n//         Authorization: \"Bearer \" + tokenService.getToken(), \n//       }\n//     }).then((res) => {\n//       if (res.ok) return res.json();\n//       throw new Error(res.error);\n//     });\n//   }\n\n\nexport function create(post) {\n    return fetch(BASE_URL, {\n        method: 'POST',\n        body: post,\n        headers: {\n            Authorization: 'Bearer ' + tokenService.getToken()\n        },\n    }).then((res) => {\n        if (res.ok) return res.json();\n        return res.json().then(response => {\n            console.log(response)\n            throw new Error(response.err)\n        })\n    });\n}\n\nexport function getAll() {\n    return fetch(BASE_URL, {\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken()\n        }\n    })\n        .then((res) => {\n            if (res.ok) return res.json();\n\n            return res.json().then(response => {\n                console.log(response)\n                throw new Error(response.err)\n            })\n        });\n}","import tokenService from './tokenService';\n\nconst BASE_URL = '/api/'\n\nexport function create(postId) {\n    return fetch(`${BASE_URL}posts/${postId}/likes`, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + tokenService.getToken(), \n      },\n    }).then((res) => {\n      if (res.ok) return res.json();\n      throw new Error(res.error);\n    });\n  }\n\n  export function removeLike(likeId) {\n    return fetch(`${BASE_URL}likes/${likeId}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: \"Bearer \" + tokenService.getToken(), \n      }\n    }).then((res) => {\n      if (res.ok) return res.json();\n      throw new Error(res.error);\n    });\n  }\n\n  ","import React, { useState, useEffect } from 'react';\nimport Header from '../../components/Header/Header';\nimport PostGallery from '../../components/PostGallery/PostGallery';\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport AddPost from '../../components/AddPost/AddPost';\n\nimport * as postsAPI from \"../../utils/postApi\";\nimport * as likesAPI from '../../utils/likesApi';\n\nimport { Grid } from 'semantic-ui-react';\n\n\n\nexport default function Feed({loggedUser, handleLogout}) {\n    const [posts, setPosts] = useState([]);\n    const [error, setError] = useState(\"\");\n\n\n    // async function removePost(postId){\n    //     try{\n    //         const response = await postsAPI.delete(postId);\n    //         console.log(response, '<-remove Post');\n    //     }catch(err){\n    //         console.log(err, 'err from removePost')\n    //     }\n    // }\n\n    async function addLike(postId) {\n\n    \n        try {\n          const response = await likesAPI.create(postId);\n          getPosts();\n        } catch (err) {\n          setError(\"error adding like\");\n        }\n      }\n\n    async function removeLike(likeId) {\n        try {\n            const response = await likesAPI.removeLike(likeId);\n            console.log(response, '<-remove likes');\n            getPosts()\n        }catch(err) {\n            console.log(err)\n        }\n    }\n\n    async function handleAddPost(post) {\n        try {\n            const response = await postsAPI.create(post); \n            console.log(response);\n            setPosts([response.data, ...posts]); \n        } catch (err) {\n            console.log(err.message);\n            setError(\"Error creating post, please try again\");\n        }\n    }\n\n    async function getPosts() {\n        try {\n            const response = await postsAPI.getAll();\n            console.log(response, \" data\");\n            setPosts([...response.data]);\n        } catch (err) {\n            console.log(err.message, \" this is the error\");\n        }\n    }\n\n    useEffect(() => {\n        \n\n        getPosts();\n    }, []); \n\n\n\n\n\n    return (\n        <Grid textAlign='center' columns={3}>\n            <Grid.Row>\n                <Grid.Column style={{ maxWidth: 1000 }}>\n                    <Header handleLogout={handleLogout} loggedUser={loggedUser}/>\n                </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n                <Grid.Column style={{ maxWidth: 450 }}>\n                    <AddPost handleAddPost={handleAddPost} />\n                </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n                <Grid.Column >\n                    <PostGallery \n                        posts={posts}\n                        numsPhotosCol={3}\n                        isProfile={false}\n                        addLike={addLike}\n                        removeLike={removeLike}\n                        loggedUser={loggedUser}\n                        // removePost={removePost}\n                    />\n                </Grid.Column>\n            </Grid.Row>\n        </Grid>\n\n    );\n}","import { Image, Grid, Segment } from \"semantic-ui-react\";\n\nfunction ProfileBio({ user }) {\n    return (\n        <Grid textAlign=\"center\" columns={2}>\n            <Grid.Row>\n                <Grid.Column>\n                    <Image\n                        src={`${user.photoUrl\n                                ? user.photoUrl\n                                : \"https://react.semantic-ui.com/images/wireframe/square-image.png\"\n                            } `}\n                        avatar\n                        size=\"small\"\n                    />\n                </Grid.Column>\n                <Grid.Column textAlign=\"center\" style={{ maxWidth: 600 }}>\n                    <Segment vertical>\n                        <h3>{user.username}</h3>\n                    </Segment>\n                </Grid.Column>\n            </Grid.Row>\n        </Grid>\n    );\n}\n\nexport default ProfileBio;\n","import React, { useState, useEffect, useCallback } from 'react'\nimport ProfileBio from '../../components/ProfileBio/ProfileBio'\nimport PostGallery from '../../components/PostGallery/PostGallery'\nimport Header from '../../components/Header/Header';\nimport userService from \"../../utils/userService\";\nimport { useParams } from 'react-router-dom';\nimport { Grid } from 'semantic-ui-react'\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage';\n\nexport default function Profile({ loggedUser, handleLogout }) {\n    const [posts, setPosts] = useState([]);\n    const [profileUser, setProfileUser] = useState({});\n    const [error, setError] = useState('');\n\n    const { username } = useParams();\n\n    const getProfile = useCallback(async () => {\n        try {\n          const response = await userService.getProfile(username); \n          setProfileUser(response.data.user);\n          setPosts(response.data.posts);\n    \n          console.log(response);\n        } catch (err) {\n          console.log(err.message);\n          setError(\"Profile does not exist\"); \n        }\n      }, [username]);\n    \n      useEffect(() => {\n        console.log(\"firing\");\n      \n    \n        getProfile();\n      }, [username, getProfile]);\n    \n      if (error) {\n        return (\n          <>\n            <Header handleLogout={handleLogout} loggedUser={loggedUser} />\n            <ErrorMessage error={error} />;\n          </>\n        );\n      }\n    \n\n    return (\n        <Grid >\n            <Grid.Row>\n                <Grid.Column>\n                    <Header handleLogout={handleLogout} loggedUser={loggedUser} />\n                </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n                <Grid.Column>\n                    <ProfileBio user={profileUser} />\n                </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n                <Grid.Column >\n                    <PostGallery\n                        posts={posts}\n                        numPhotosCol={1}\n                        isProfile={true}\n                        loggedUser={loggedUser}\n                    />\n                </Grid.Column>\n            </Grid.Row>\n        </Grid>\n    );\n}\n\n","import React, { useState } from \"react\";\nimport { Navigate, Route, Routes } from \"react-router-dom\";\nimport \"./App.css\";\nimport SignupPage from \"../SignupPage/SignupPage\";\nimport LoginPage from \"../LoginPage/LoginPage\";\nimport userService from \"../../utils/userService\";\nimport Feed from '../Feed/Feed';\nimport Profile from '../Profile/Profile';\n\nfunction App() {\n  const [user, setUser] = useState(userService.getUser()); // getUser decodes our JWT token, into a javascript object\n  // this object corresponds to the jwt payload which is defined in the server signup or login function that looks like\n  // this  const token = createJWT(user); // where user was the document we created from mongo\n\n  function handleSignUpOrLogin() {\n    setUser(userService.getUser()); // getting the user from localstorage decoding the jwt\n  }\n\n  function handleLogout() {\n    userService.logout();\n    setUser(null);\n  }\n\n  if (user) {\n    return (\n      <Routes>\n        <Route\n          path=\"/:username\"\n          element={<Profile handleLogout={handleLogout}/>} />\n        <Route\n          path=\"/\"\n          element={<Feed loggedUser={user} handleLogout={handleLogout}/>} />\n        <Route\n          path=\"/login\"\n          element={<LoginPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n        />\n        <Route\n          path=\"/signup\"\n          element={<SignupPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n        />\n      </Routes>\n    );\n  }\n\n  return (\n    <Routes>\n      <Route\n        path=\"/login\"\n        element={<LoginPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n      />\n      <Route\n        path=\"/signup\"\n        element={<SignupPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n      />\n      <Route path=\"/*\" element={<Navigate to=\"/login\" />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './pages/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router><App/></Router>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}